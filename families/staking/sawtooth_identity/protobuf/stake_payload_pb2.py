# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: stake_payload.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='stake_payload.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x13stake_payload.proto\"\xc0\x01\n\x0cStakePayload\x12/\n\x0cpayload_type\x18\x01 \x01(\x0e\x32\x19.StakePayload.PayloadType\x12\'\n\x04send\x18\x02 \x01(\x0b\x32\x19.SendStakeTransactionData\x12\'\n\x04lock\x18\x03 \x01(\x0b\x32\x19.LockStakeTransactionData\"-\n\x0bPayloadType\x12\x0e\n\nSEND_STAKE\x10\x00\x12\x0e\n\nLOCK_STAKE\x10\x01\";\n\x18SendStakeTransactionData\x12\x10\n\x08toPubKey\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"/\n\x18LockStakeTransactionData\x12\x13\n\x0b\x62lockNumber\x18\x02 \x01(\x03\x42\x33\n\x1fsawtooth.stake_payload.protobufP\x01Z\x0e\x62lock_info_pb2b\x06proto3')
)



_STAKEPAYLOAD_PAYLOADTYPE = _descriptor.EnumDescriptor(
  name='PayloadType',
  full_name='StakePayload.PayloadType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SEND_STAKE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOCK_STAKE', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=171,
  serialized_end=216,
)
_sym_db.RegisterEnumDescriptor(_STAKEPAYLOAD_PAYLOADTYPE)


_STAKEPAYLOAD = _descriptor.Descriptor(
  name='StakePayload',
  full_name='StakePayload',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='payload_type', full_name='StakePayload.payload_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='send', full_name='StakePayload.send', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='lock', full_name='StakePayload.lock', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _STAKEPAYLOAD_PAYLOADTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24,
  serialized_end=216,
)


_SENDSTAKETRANSACTIONDATA = _descriptor.Descriptor(
  name='SendStakeTransactionData',
  full_name='SendStakeTransactionData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='toPubKey', full_name='SendStakeTransactionData.toPubKey', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='SendStakeTransactionData.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=218,
  serialized_end=277,
)


_LOCKSTAKETRANSACTIONDATA = _descriptor.Descriptor(
  name='LockStakeTransactionData',
  full_name='LockStakeTransactionData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='blockNumber', full_name='LockStakeTransactionData.blockNumber', index=0,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=279,
  serialized_end=326,
)

_STAKEPAYLOAD.fields_by_name['payload_type'].enum_type = _STAKEPAYLOAD_PAYLOADTYPE
_STAKEPAYLOAD.fields_by_name['send'].message_type = _SENDSTAKETRANSACTIONDATA
_STAKEPAYLOAD.fields_by_name['lock'].message_type = _LOCKSTAKETRANSACTIONDATA
_STAKEPAYLOAD_PAYLOADTYPE.containing_type = _STAKEPAYLOAD
DESCRIPTOR.message_types_by_name['StakePayload'] = _STAKEPAYLOAD
DESCRIPTOR.message_types_by_name['SendStakeTransactionData'] = _SENDSTAKETRANSACTIONDATA
DESCRIPTOR.message_types_by_name['LockStakeTransactionData'] = _LOCKSTAKETRANSACTIONDATA
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

StakePayload = _reflection.GeneratedProtocolMessageType('StakePayload', (_message.Message,), dict(
  DESCRIPTOR = _STAKEPAYLOAD,
  __module__ = 'stake_payload_pb2'
  # @@protoc_insertion_point(class_scope:StakePayload)
  ))
_sym_db.RegisterMessage(StakePayload)

SendStakeTransactionData = _reflection.GeneratedProtocolMessageType('SendStakeTransactionData', (_message.Message,), dict(
  DESCRIPTOR = _SENDSTAKETRANSACTIONDATA,
  __module__ = 'stake_payload_pb2'
  # @@protoc_insertion_point(class_scope:SendStakeTransactionData)
  ))
_sym_db.RegisterMessage(SendStakeTransactionData)

LockStakeTransactionData = _reflection.GeneratedProtocolMessageType('LockStakeTransactionData', (_message.Message,), dict(
  DESCRIPTOR = _LOCKSTAKETRANSACTIONDATA,
  __module__ = 'stake_payload_pb2'
  # @@protoc_insertion_point(class_scope:LockStakeTransactionData)
  ))
_sym_db.RegisterMessage(LockStakeTransactionData)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\037sawtooth.stake_payload.protobufP\001Z\016block_info_pb2'))
# @@protoc_insertion_point(module_scope)
